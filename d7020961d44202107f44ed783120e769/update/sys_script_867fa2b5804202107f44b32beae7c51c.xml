<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_ollama_genai_prompt</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_ollama_genai_prompt">promptVALCHANGES^promptISNOTEMPTY^EQ<item endquery="false" field="prompt" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="prompt" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Call Ollama API</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    try {
        var inputs = {};
        inputs['requestbody'] = current.prompt + ''; // String 
        inputs['prompttable'] = current.sys_class_name + ''; // String 
        inputs['promptsysid'] = current.sys_id  + ''; // String 

        //Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
        sn_fd.FlowAPI.getRunner().action('x_snc_ollama_genai.callolllamaserver').inBackground().withInputs(inputs).run();
        /*			
		// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
		var result = sn_fd.FlowAPI.getRunner().action('x_snc_ollama_genai.callolllamaserver').inForeground().withInputs(inputs).run();
		var outputs = result.getOutputs();
*/
        // Current action has no outputs defined.		
    } catch (ex) {
        var message = ex.getMessage();
        gs.error(message);
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-05-09 13:53:45</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>867fa2b5804202107f44b32beae7c51c</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Call Ollama API</sys_name>
        <sys_overrides/>
        <sys_package display_value="Ollama GenAI" source="x_snc_ollama_genai">d7020961d44202107f44ed783120e769</sys_package>
        <sys_policy/>
        <sys_scope display_value="Ollama GenAI">d7020961d44202107f44ed783120e769</sys_scope>
        <sys_update_name>sys_script_867fa2b5804202107f44b32beae7c51c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-05-09 16:03:44</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=867fa2b5804202107f44b32beae7c51c"/>
</record_update>
